import{_ as o,r as p,o as t,c,a as s,b as l,F as r,d as a,e}from"./app.df9dc7a7.js";const i={},y=s("h2",{id:"introduction-to-data-table",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#introduction-to-data-table","aria-hidden":"true"},"#"),a(" Introduction to data.table")],-1),E=a("The "),d={href:"https://rdatatable.gitlab.io/data.table",target:"_blank",rel:"noopener noreferrer"},F=s("strong",null,"data.table",-1),D=e(" package centers around <em>data.tables</em>, which are highly efficient data frames that can be manipulated using the package&#39;s concise syntax. For example, say we have a data.table called <code>dat</code> (you can call it whatever you want). Then we can manipulate it by putting arguments into its square brackets, i.e. <code>dat[]</code>. The three main components of a <strong>data.table</strong> operation are <code>i</code>, <code>j</code>, and <code>by</code>, which go in the order <strong><code>dat[i, j, by]</code></strong>. Note you don&#39;t have to specify the latter two if you&#39;re not currently using them.",17),b=e("<ul><li><strong><code>i</code></strong>, the first component, selects the rows of the data.table that you&#39;ll be working with, like how in Stata the <code>if</code> or <code>in</code> command options let you refer to certain rows.</li><li><strong><code>j</code></strong>, the second component, both selects and operates on the columns of the data.table, like how in Stata the <code>keep</code> or <code>drop</code> commands select specific columns of your data, or how <code>generate</code> or <code>replace</code> create or modify columns in your data.</li><li><strong><code>by</code></strong>, the third component, gives the variable(s) designating groups that you&#39;ll be doing your calculations within, like how in Stata you can precede a command with <code>bysort</code>.</li></ul><p><strong>data.table</strong> uses these simple components very flexibly. The upshot is that you can perform complicated operations in a single line of concise <strong>data.table</strong> code, which may have required multiple commands in other languages or libraries to accomplish. But even if you aren&#39;t doing anything fancy, <strong>data.table</strong> has you covered with a stable set of functions that can be deployed on virtually any data wrangling task.</p><p>Like Stata, <strong>data.table</strong> also provides some special shortcut symbols for common operations. For example, <code>_N</code> in Stata is equivalent to <code>.N</code> in <strong>data.table</strong>, while <code>.(x1, x2)</code> is short for <code>list(x1, x2)</code>. We&#39;ll see more examples in cheatsheat that follows. But we do want to quickly highlight one special symbol in particular: <code>.SD</code> refers to the (S)ubset of (D)ata you&#39;re working with. This can be used to do complex within-group calculations when you have by specified, but more generally it&#39;s a way to perform operations on lots of columns with one line of code. By default, <code>.SD</code> refers to all columns in the dataset (excepting those in <code>by</code>). But you can specify the columns you want with the <code>.SDcols</code> argument. Again, we&#39;ll see a bunch of examples below.</p>",3),u=a("Finally, "),m=s("strong",null,"data.table",-1),f=a(" is extremely fast. It has long set the standard for in-memory data wrangling "),A={href:"https://h2oai.github.io/db-benchmark",target:"_blank",rel:"noopener noreferrer"},h=a("benchmarks"),g=a(" across a variety of libraries and languages. You will likely see an order(s) of magnitude performance difference as you compare the code chunks below. As a bonus for Stata users, who are used to operations changing a single dataset in memory, many "),v=s("strong",null,"data.table",-1),C=a(" operations can be done "),B=s("em",null,"in-place",-1),_=a(". This means that you don't have to (re)assign the result to a new "),w=s("strong",null,"data.table",-1),k=a(". In-place modifications are also very efficient, since they will only affect the parts you're actually changing, without wasting memory and time on the parts that aren't being changed. Any time in the below cheat sheet you see a function with the word "),x=s("code",null,"set",-1),q=a(" in it, or the "),S=s("code",null,":=",-1),R=a(" operator, that's an in-place operation."),I=s("h2",{id:"data-i-o",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#data-i-o","aria-hidden":"true"},"#"),a(" Data I/O")],-1),T=a("Like Stata's "),N=s("code",null,".dta",-1),L=a(" format, R has its own native "),M=s("code",null,".rds",-1),j=a(" binary file storage type. (See also the "),Y={href:"http://www.fstpackage.org/",target:"_blank",rel:"noopener noreferrer"},U=s("strong",null,"fst",-1),G=a(" package.) However, we generally recommend that users avoid native\u2014especially proprietary\u2014data types since they hamper interoperability and reproducibility. We'll hence concentrate on common open-source file types below. We'll make an exception for "),O=s("code",null,".dta",-1),W=a(" given our target audience, but we still recommend avoiding it if possible."),X=e(`<h3 id="read-and-write-csv" tabindex="-1"><a class="header-anchor" href="#read-and-write-csv" aria-hidden="true">#</a> Read and write .csv</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;">import delimited using </span><span style="color:#F6C177;">&quot;https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">clear</span></span>
<span class="line"><span style="color:#E0DEF4;">export delimited using </span><span style="color:#F6C177;">&quot;flightdata.csv&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fread</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">fwrite</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;flightdata.csv&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h3 id="read-and-write-parquet" tabindex="-1"><a class="header-anchor" href="#read-and-write-parquet" aria-hidden="true">#</a> Read and write .parquet</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Stata currently has limited support for parquet files</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> (and Linux/Unix only).</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> See: https://github.com/mcaceresb/stata-parquet</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># These commands require the \`arrow\` package</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">pfiles</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">dir</span><span style="color:#E0DEF4;">(</span><span style="color:#C4A7E7;font-style:italic;">pattern</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;.parquet&quot;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">rbindlist</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">pfiles</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> arrow</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">read_parquet</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">rbindlist</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">pfiles</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> arrow</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">read_parquet</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">col_select</span><span style="color:#31748F;">=</span><span style="color:#EBBCBA;">1</span><span style="color:#31748F;">:</span><span style="color:#EBBCBA;">10</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><h3 id="read-and-write-dta" tabindex="-1"><a class="header-anchor" href="#read-and-write-dta" aria-hidden="true">#</a> Read and write .dta</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> .dta is Stata&#39;s native (proprietary) file format</span></span>
<span class="line"><span style="color:#31748F;">use</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;filename.dta&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">clear</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">save</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;filename.dta&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># These commands require the \`haven\` package</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> haven</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">read_dta</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;filename.dta&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setDT</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Or: dat = as.data.table(dat)</span></span>
<span class="line"><span style="color:#E0DEF4;">haven</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">write_dta</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;filename.dta&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><h2 id="order" tabindex="-1"><a class="header-anchor" href="#order" aria-hidden="true">#</a> Order</h2><h3 id="sort-rows" tabindex="-1"><a class="header-anchor" href="#sort-rows" aria-hidden="true">#</a> Sort rows</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">sort</span><span style="color:#E0DEF4;"> air_time</span></span>
<span class="line"><span style="color:#31748F;">sort</span><span style="color:#E0DEF4;"> air_time dest</span></span>
<span class="line"><span style="color:#31748F;">gsort</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">-</span><span style="color:#E0DEF4;">air_time</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">setorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">-</span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><h3 id="sort-columns" tabindex="-1"><a class="header-anchor" href="#sort-columns" aria-hidden="true">#</a> Sort columns</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">order</span><span style="color:#E0DEF4;"> month day</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">setcolorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;month&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&#39;day&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="rename-columns" tabindex="-1"><a class="header-anchor" href="#rename-columns" aria-hidden="true">#</a> Rename columns</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> rename (old) (new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">rename</span><span style="color:#E0DEF4;"> arr_delay arrival_delay</span></span>
<span class="line"><span style="color:#31748F;">rename</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">carrier origin</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">carrier_code origin_code</span><span style="color:#31748F;">)</span></span>
<span class="line"><span style="color:#31748F;">rename</span><span style="color:#E0DEF4;"> arr_</span><span style="color:#31748F;">*</span><span style="color:#E0DEF4;"> arrival_</span><span style="color:#31748F;">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># setnames(dat, old = ..., new = ...)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setnames</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;arrival_delay&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setnames</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;carrier&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&#39;origin&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;carrier_code&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;origin_code&#39;</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setnames</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">gsub</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;arr_&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;arrival_&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">names</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h2 id="subset" tabindex="-1"><a class="header-anchor" href="#subset" aria-hidden="true">#</a> Subset</h2><p>In newer versions of Stata, it&#39;s possible to keep multiple datasets in memory, or &quot;frames&quot; as Stata calls them. However, this still requires extra steps that would be unusual to users of other languages. It&#39;s also not the typical way that most peope use Stata. In contrast, keeping multiple datasets in memory is extremely common in R. Moreover, subsetting and collapsing operations don&#39;t overwrite your original dataset. The upshot is that you don&#39;t need to wrap everything in <code>preserve/restore</code>. However, it also means that you&#39;ll need to (re)assign your subsetted/collapsed data if you want to use it again later. E.g. <code>dat1 = dat[origin==&#39;LGA&#39;]</code>.</p><h3 id="subset-rows" tabindex="-1"><a class="header-anchor" href="#subset-rows" aria-hidden="true">#</a> Subset rows</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">in</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#31748F;">/</span><span style="color:#EBBCBA;">200</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> day </span><span style="color:#31748F;">&gt;</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">5</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> day </span><span style="color:#31748F;">&lt;</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">10</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">inrange</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">5</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">10</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> origin</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&quot;LGA&quot;</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">regex</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&quot;LGA&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">inlist</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">month</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">4</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">11</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">12</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">inlist</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&quot;JFK&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&quot;LGA&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">drop</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> month</span><span style="color:#31748F;">==</span><span style="color:#EBBCBA;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = dat[1:200]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#EBBCBA;">1</span><span style="color:#31748F;">:</span><span style="color:#EBBCBA;">200</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&gt;</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">5</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&lt;</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">10</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">between</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">5</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">10</span><span style="color:#6E6A86;">)]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Or: dat[day %in% 5:10]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&#39;LGA&#39;</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%like%</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;LGA&#39;</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%in%</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#EBBCBA;">3</span><span style="color:#E0DEF4;">,</span><span style="color:#EBBCBA;">4</span><span style="color:#E0DEF4;">,</span><span style="color:#EBBCBA;">11</span><span style="color:#E0DEF4;">,</span><span style="color:#EBBCBA;">12</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%chin%</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&quot;JFK&quot;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&quot;LGA&quot;</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># %chin% is a fast %in% for (ch)aracter strings</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#31748F;">!=</span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div><h3 id="subset-columns" tabindex="-1"><a class="header-anchor" href="#subset-columns" aria-hidden="true">#</a> Subset columns</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> month day carrier</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> year</span><span style="color:#31748F;">-</span><span style="color:#E0DEF4;">arr_delay</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">*</span><span style="color:#E0DEF4;">_delay</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">drop</span><span style="color:#E0DEF4;"> origin dest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">ds</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">has</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">type</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">string</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">drop</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">r</span><span style="color:#555169;font-style:italic;">(varlist)</span><span style="color:#F6C177;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">ds</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">has</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">type</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">int</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">r</span><span style="color:#555169;font-style:italic;">(varlist)</span><span style="color:#F6C177;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = dat[, .(month)]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">)]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># same as above</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;month&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;day&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;carrier&#39;</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># ditto</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">year</span><span style="color:#31748F;">:</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;*_delay&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#31748F;">-</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;origin&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;origin&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">) </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">NULL</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># same, but in-place</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Matches the two lines on the left:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=!</span><span style="color:#E0DEF4;font-style:italic;">is.character</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Matches the two lines on the left:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">is.integer</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></div></div><h3 id="subset-rows-and-columns" tabindex="-1"><a class="header-anchor" href="#subset-rows-and-columns" aria-hidden="true">#</a> Subset rows and columns</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> origin</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&quot;LGA&quot;</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> month day carrier</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = dat[...]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Matches the two lines on the left:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&quot;LGA&quot;</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h3 id="drop-duplicates" tabindex="-1"><a class="header-anchor" href="#drop-duplicates" aria-hidden="true">#</a> Drop duplicates</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">duplicates</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">drop</span></span>
<span class="line"><span style="color:#31748F;">duplicates</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">drop</span><span style="color:#E0DEF4;"> month day carrier</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> force</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = unique(dat)</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#EB6F92;font-style:italic;">unique</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">unique</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;month&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;day&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;carrier&#39;</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h3 id="drop-missing" tabindex="-1"><a class="header-anchor" href="#drop-missing" aria-hidden="true">#</a> Drop missing</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dest</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Requires: ssc inst missings</span></span>
<span class="line"><span style="color:#E0DEF4;">missings dropvars</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> force</span></span>
<span class="line"><span style="color:#E0DEF4;">missings air_time dest</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> force</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat = dat[!is.na(dest)]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">is.na</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">na.omit</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">na.omit</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">cols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;air_time&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">is.na</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#E0DEF4;">) </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">is.na</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Same as above</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><h2 id="modify" tabindex="-1"><a class="header-anchor" href="#modify" aria-hidden="true">#</a> Modify</h2><h3 id="create-new-variables" tabindex="-1"><a class="header-anchor" href="#create-new-variables" aria-hidden="true">#</a> Create new variables</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> dist_sq </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> tot_delay </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> dep_delay </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> arr_delay</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> first_letter </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">substr</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">,</span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> flight_path </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> origin </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> &#39;_&#39; </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> dest</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dist_sq</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">tot_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">first_letter</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">substr</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#E0DEF4;">,</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;">,</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">flight_path</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">paste</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">sep</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;_&#39;</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><p><em>Aside: These next operations don&#39;t have a great Stata equivalent, although you could implement a loop.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;">?</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Multiple variables can be created at once.</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># These next three lines all do the same thing.</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Just pick your favourite.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;dist_sq&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;dist_cu&#39;</span><span style="color:#E0DEF4;">) </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;:=&#39;</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dist_sq</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">dist_cu</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">let</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dist_sq</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">dist_cu</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># dev version only</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># We can also chain back-to-back dat[...][...]</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># (this holds for any data.table operation)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dist_sq</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">^</span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">][</span></span>
<span class="line"><span style="color:#E0DEF4;">    , </span><span style="color:#E0DEF4;font-style:italic;">dist_cu</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#31748F;">*</span><span style="color:#E0DEF4;font-style:italic;">dist_sq</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div></div><h3 id="create-new-variables-within-groups" tabindex="-1"><a class="header-anchor" href="#create-new-variables-within-groups" aria-hidden="true">#</a> Create new variables within groups</h3><p><em>Aside: In R, any missing (i.e. &quot;NA&quot;) values will propagate during aggregating functions. If you have NA values in your real-life dataset \u2014 we don&#39;t in this example dataset \u2014 you probably want to add <code>na.rm=TRUE</code> to remove these on the fly. E.g. <code>mean(var1, na.rm=TRUE)</code> or <code>lapply(.SD, mean, na.rm=TRUE)</code>.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">bysort</span><span style="color:#E0DEF4;"> origin</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> mean_dep_delay </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">bysort</span><span style="color:#E0DEF4;"> origin dest</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> mean_dep_delay2 </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Multiple grouped variables (manual demean example)</span></span>
<span class="line"><span style="color:#31748F;">foreach</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">of varlist</span><span style="color:#E0DEF4;"> dep_delay arr_delay air_time </span><span style="color:#31748F;">{</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> mean_</span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">&#39;</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">&#39;</span><span style="color:#6E6A86;">),</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">&#39;</span><span style="color:#E0DEF4;">_dm </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">\`</span><span style="color:#555169;font-style:italic;"> - mean_\`x</span><span style="color:#F6C177;">&#39;</span></span>
<span class="line"><span style="color:#555169;font-style:italic;">    drop mean*</span></span>
<span class="line"><span style="color:#555169;font-style:italic;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#555169;font-style:italic;">* Some short-cut symbols</span></span>
<span class="line"><span style="color:#9CCFD8;">bysort</span><span style="color:#555169;font-style:italic;"> carrier: g rows_per_carrier = _N</span></span>
<span class="line"><span style="color:#9CCFD8;">bysort</span><span style="color:#555169;font-style:italic;"> carrier: g index_within_carrier = _n</span></span>
<span class="line"><span style="color:#9CCFD8;">egen</span><span style="color:#555169;font-style:italic;"> origin_index = group(origin)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#555169;font-style:italic;">* Refer to other rows (uses generic data set)</span></span>
<span class="line"><span style="color:#9CCFD8;">sort</span><span style="color:#555169;font-style:italic;"> group time</span></span>
<span class="line"><span style="color:#9CCFD8;">by</span><span style="color:#555169;font-style:italic;"> group: gen growth = X/X[_n-1]</span></span>
<span class="line"><span style="color:#9CCFD8;">by</span><span style="color:#555169;font-style:italic;"> group: gen growth_since_first = X/X[1]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean_dep_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean_dep_delay2</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Multiple grouped variables (manual demean example)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">dmcols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;dep_delay&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;air_time&#39;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#EB6F92;font-style:italic;">paste0</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dmcols</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;_dm&#39;</span><span style="color:#E0DEF4;">) </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, \\</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#31748F;">-</span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#E0DEF4;">)),  </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># before R 4.1 you&#39;ll need function(x) instead of the \\(x) shorthand</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dmcols</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Some short-cut symbols</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">rows_per_carrier</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> .</span><span style="color:#E0DEF4;font-style:italic;">N</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">index_within_carrier</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> .</span><span style="color:#E0DEF4;font-style:italic;">I</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">origin_index</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> .</span><span style="color:#E0DEF4;font-style:italic;">GRP</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Refer to other rows (uses generic data set)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">growth</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#31748F;">/</span><span style="color:#E0DEF4;font-style:italic;">shift</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">growth_since_first</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#31748F;">/</span><span style="color:#E0DEF4;font-style:italic;">first</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></div></div><h3 id="work-with-dates" tabindex="-1"><a class="header-anchor" href="#work-with-dates" aria-hidden="true">#</a> Work with dates</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Give ourselves a date variable to work with</span></span>
<span class="line"><span style="color:#31748F;">tostring</span><span style="color:#E0DEF4;"> year month day</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> day_string </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> year </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;/&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> month </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;/&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> day</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> date </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">date</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">day_string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;YMD&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">format</span><span style="color:#E0DEF4;"> date </span><span style="color:#31748F;">%</span><span style="color:#E0DEF4;">td</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Pull out year (quarter, month, etc. work too)</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> the_year </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">year</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">date</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Shift forward 7 days</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> date </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> date </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">7</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Make ourselves a date variable</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">as.IDate</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">paste</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">year</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">sep</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;-&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Pull out year (quarter, month, etc. work too)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">the_year</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">year</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Shift forward 7 days</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">7</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div></div><h3 id="modify-existing-variables" tabindex="-1"><a class="header-anchor" href="#modify-existing-variables" aria-hidden="true">#</a> Modify existing variables</h3><p><em>Aside: We don&#39;t normally use a gen -&gt; replace workflow in R, the way we do in Stata. See the &#39;Using Booleans &amp; control-flow&#39; section below for a more idiomatic approach.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> tot_delay </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> dep_delay </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> arr_delay</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Conditional modification</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> distance </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> distance </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> month</span><span style="color:#31748F;">==</span><span style="color:#EBBCBA;">9</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> distance </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">0</span><span style="color:#E0DEF4;"> in </span><span style="color:#EBBCBA;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Modify multiple variables (same function)</span></span>
<span class="line"><span style="color:#31748F;">foreach</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">of varlist</span><span style="color:#E0DEF4;"> origin dest </span><span style="color:#31748F;">{</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">&#39;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">x</span><span style="color:#F6C177;">&#39;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot; Airport&quot;</span></span>
<span class="line"><span style="color:#31748F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">tot_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Conditional modification</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#31748F;">==</span><span style="color:#EBBCBA;">9</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">0</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Modify multiple variables (same function)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">cols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;origin&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">cols</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, \\</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">paste</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;Airport&#39;</span><span style="color:#E0DEF4;">)),  </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;">## Note: before R 4.1 you need function(x) instead of the \\(x) shorthand</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">cols</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div></div><h3 id="using-booleans-control-flow" tabindex="-1"><a class="header-anchor" href="#using-booleans-control-flow" aria-hidden="true">#</a> Using Booleans &amp; control-flow</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> long_flight </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> air_time</span><span style="color:#31748F;">&gt;</span><span style="color:#EBBCBA;">500</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> flight_length </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Long&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> air_time</span><span style="color:#31748F;">&gt;</span><span style="color:#EBBCBA;">500</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> flight_length </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Short&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">flight_length</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&amp;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> flight_length2 </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Long&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">!</span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">air_time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> flight_length2 </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Med&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> air_time</span><span style="color:#31748F;">&lt;=</span><span style="color:#EBBCBA;">500</span></span>
<span class="line"><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> flight_length2 </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Short&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> air_time</span><span style="color:#31748F;">&lt;=</span><span style="color:#EBBCBA;">120</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">long_flight</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#31748F;">&gt;</span><span style="color:#EBBCBA;">500</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">flight_length</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fifelse</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#31748F;">&gt;</span><span style="color:#EBBCBA;">500</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Long&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Short&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># fifelse is like base-R ifelse, but (f)aster!</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># for nested ifelse, easier to use fcase</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">flight_length2</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fcase</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#31748F;">&lt;=</span><span style="color:#EBBCBA;">120</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Short&#39;</span><span style="color:#6E6A86;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                              </span><span style="color:#E0DEF4;font-style:italic;">air_time</span><span style="color:#31748F;">&lt;=</span><span style="color:#EBBCBA;">500</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Med&#39;</span><span style="color:#6E6A86;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                              </span><span style="color:#C4A7E7;font-style:italic;">default</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Long&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div></div><h3 id="row-wise-calculations" tabindex="-1"><a class="header-anchor" href="#row-wise-calculations" aria-hidden="true">#</a> Row-wise calculations</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Pre-packaged row calculations:</span></span>
<span class="line"><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> tot_delay </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">rowtotal</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">*</span><span style="color:#C4A7E7;font-style:italic;">_delay</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> any_delay </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">rowfirst</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">*</span><span style="color:#C4A7E7;font-style:italic;">_delay</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Custom row calculations:</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> ?</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Pre-packaged row calculations:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">tot_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">rowSums</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;*_delay&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">any_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fcoalesce</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;">.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;*_delay&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Custom row calculations:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">new_var</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mapply</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">custom_func</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">var2</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">new_var</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">custom_func</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">var2</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">.</span><span style="color:#E0DEF4;font-style:italic;">I</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># dev version only</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></div><h3 id="fill-in-time-series-panel-data" tabindex="-1"><a class="header-anchor" href="#fill-in-time-series-panel-data" aria-hidden="true">#</a> Fill in Time Series/Panel Data</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Carry forward the last-known observation</span></span>
<span class="line"><span style="color:#31748F;">sort</span><span style="color:#E0DEF4;"> id time</span></span>
<span class="line"><span style="color:#31748F;">by</span><span style="color:#E0DEF4;"> id</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> x </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> x</span><span style="color:#6E6A86;">[</span><span style="color:#EBBCBA;font-style:italic;">_n</span><span style="color:#31748F;">-</span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">x</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Carry back the next-known observation</span></span>
<span class="line"><span style="color:#31748F;">gsort</span><span style="color:#E0DEF4;"> id </span><span style="color:#31748F;">-</span><span style="color:#E0DEF4;">time</span></span>
<span class="line"><span style="color:#31748F;">by</span><span style="color:#E0DEF4;"> id</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">replace</span><span style="color:#E0DEF4;"> x </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> x</span><span style="color:#6E6A86;">[</span><span style="color:#EBBCBA;font-style:italic;">_n</span><span style="color:#31748F;">-</span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">missing</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">x</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Carry forward the last-known observation</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">setorder</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">id</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">time</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">nafill</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">type</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;locf&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">id</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Carry back the next-known observation</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">nafill</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">type</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;nocb&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">id</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><h2 id="collapse" tabindex="-1"><a class="header-anchor" href="#collapse" aria-hidden="true">#</a> Collapse</h2><p>In newer versions of Stata, it&#39;s possible to keep multiple datasets in memory, or &quot;frames&quot; as Stata calls them. However, this still requires extra steps that would be unusual to users of other languages. It&#39;s also not the typical way that most peope use Stata. In contrast, keeping multiple datasets in memory is extremely common in R. Moreover, subsetting and collapsing operations don&#39;t overwrite your original dataset. The upshot is that you don&#39;t need to wrap everything in <code>preserve/restore</code>. However, it also means that you&#39;ll need to (re)assign your subsetted/collapsed data if you want to use it again later. E.g. <code>dat1 = dat[, mean(var1)]</code>. Finally, remember our earlier note about aggregating functions on columns that have missing values: Use <code>na.rm=TRUE</code> to remove these on the fly. E.g. <code>dat[, mean(var1, na.rm=TRUE)]</code>.</p><h3 id="collapse-with-no-grouping" tabindex="-1"><a class="header-anchor" href="#collapse-with-no-grouping" aria-hidden="true">#</a> Collapse with no grouping</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> dep_delay</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> mean_ddel</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">dep_delay</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> mean_ddel</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">dep_delay mean_adel</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">arr_delay</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">*</span><span style="color:#E0DEF4;">delay</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">ds</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">has</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">type</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">long</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">r</span><span style="color:#555169;font-style:italic;">(varlist)</span><span style="color:#F6C177;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = dat[, mean(dep_delay)]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Just give me the number! As a scalar.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mean_ddel</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Give me back a data.table (note the .() here, that&#39;s what does it)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># These next three lines all do the same thing.</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Just pick your favourite.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mean_ddel</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">mean_adel</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#E0DEF4;">))</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;dep_delay&#39;</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#31748F;">:</span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;delay&#39;</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Matches the two lines on the left</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">is.numeric</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><h3 id="collapse-by-group" tabindex="-1"><a class="header-anchor" href="#collapse-by-group" aria-hidden="true">#</a> Collapse by group</h3><div class="code--container"><div><p><em>Reminder: You&#39;ll need to use <code>preserve/restore</code> if you want to retain the original dataset in the examples that follow.</em></p><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> arr_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> mean_adel </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> arr_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> arr_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">month</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\\\</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">min</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> min_d </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> distance </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">max</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> max_d </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> distance</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\</span><span style="color:#E0DEF4;">\\</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">*</span><span style="color:#E0DEF4;">_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\</span><span style="color:#E0DEF4;">\\</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\</span><span style="color:#E0DEF4;">\\</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> dep_delay arr_delay air_time distance</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\</span><span style="color:#E0DEF4;">\\</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> unique_dest </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">tag</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">dest</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(sum)</span><span style="color:#E0DEF4;"> unique_dest</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">origin</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></div><div><p><em>Reminder: You&#39;ll need to (re)assign the subsetted dataset if you want to use it later, e.g. <code>dat1 = dat[, ...]</code>.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">arr_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mean_adel</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">arr_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">min_d</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">min</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">max_d</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">max</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">distance</span><span style="color:#E0DEF4;">)), </span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;_delay&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#EB6F92;font-style:italic;">lapply</span><span style="color:#E0DEF4;">(.</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">), </span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">.SDcols</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;dep_delay&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;air_time&#39;</span><span style="color:#E0DEF4;">,</span><span style="color:#F6C177;">&#39;distance&#39;</span><span style="color:#E0DEF4;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Matches the final two lines on the left:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">unique_dest</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">uniqueN</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></div></div><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><i>Bonus: You can also do complicated (grouped) aggregations as part of a \`dcast\` (i.e. reshape wide) call. E.g. Get the min, mean and max departure and arrival delays, by origin airport.</i><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dcast</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;">.</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">fun</span><span style="color:#31748F;">=list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">min</span><span style="color:#E0DEF4;">,</span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">,</span><span style="color:#E0DEF4;font-style:italic;">max</span><span style="color:#6E6A86;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">      </span><span style="color:#C4A7E7;font-style:italic;">value.var</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;dep_delay&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h3 id="count-rows" tabindex="-1"><a class="header-anchor" href="#count-rows" aria-hidden="true">#</a> Count rows</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">count</span></span>
<span class="line"><span style="color:#31748F;">count</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> month</span><span style="color:#31748F;">==</span><span style="color:#EBBCBA;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Count rows by group:</span></span>
<span class="line"><span style="color:#31748F;">tabulate</span><span style="color:#E0DEF4;"> origin</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">N</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Or: nrow(dat)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#31748F;">==</span><span style="color:#EBBCBA;">10</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">N</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Or: nrow(dat[month==10]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Count rows by group:</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">N</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="grouped-calculations-and-complex-objects-inside-a-data-table" tabindex="-1"><a class="header-anchor" href="#grouped-calculations-and-complex-objects-inside-a-data-table" aria-hidden="true">#</a> Grouped calculations and complex objects inside a data.table</h3><p><em>Note: data.tables support list columns, so you can have complex objects like regression models inside a data.table. Among many other things, this means you can nest simulations inside a data.table as easily as you would perform any other (grouped) operation.</em></p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Example: Grouped regression</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Let&#39;s run a separate regression of arrival delay on</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># departure delay for each month, inside our dataset</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Just the coefficients</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">beta</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">coef</span><span style="color:#E0DEF4;">(</span><span style="color:#EB6F92;font-style:italic;">lm</span><span style="color:#E0DEF4;">(</span><span style="color:#C4A7E7;font-style:italic;">arr_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> .</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">[</span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Keep the whole model for each month</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">mods</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">           </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mod</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">lm</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">arr_delay</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dep_delay</span><span style="color:#E0DEF4;">, .</span><span style="color:#E0DEF4;font-style:italic;">SD</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">           </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">]</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Now you can do things like put all 10 models in a</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># regression table or coefficient plot</span></span>
<span class="line"><span style="color:#E0DEF4;">modelsummary</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">msummary</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">mods</span><span style="color:#31748F;">$</span><span style="color:#E0DEF4;font-style:italic;">mod</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;">modelsummary</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">modelplot</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">mods</span><span style="color:#31748F;">$</span><span style="color:#E0DEF4;font-style:italic;">mod</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">coef_omit</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;Inter&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="reshape" tabindex="-1"><a class="header-anchor" href="#reshape" aria-hidden="true">#</a> Reshape</h2><h3 id="reshape-prep-this-dataset-only" tabindex="-1"><a class="header-anchor" href="#reshape-prep-this-dataset-only" aria-hidden="true">#</a> Reshape prep (this dataset only)</h3><p><em>Note: We need to do a bit of prep to our air-traffic dataset to better demonstrate the reshape examples in this section. You probably don&#39;t need to do this for your own dataset.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> We&#39;ll generate row IDs to avoid the (reshape) ambiguity</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> of repeated entries per date</span></span>
<span class="line"><span style="color:#31748F;">gen</span><span style="color:#E0DEF4;"> id </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;font-style:italic;">_n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> For the Stata reshape, it&#39;s also going to prove</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> convenient to rename the delay vars.</span></span>
<span class="line"><span style="color:#31748F;">rename</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">dep_delay arr_delay</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">delay_dep delay_arr</span><span style="color:#31748F;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># We&#39;ll generate row IDs to avoid the (reshape) ambiguity</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># of repeated entries per date</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">id</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> .</span><span style="color:#E0DEF4;font-style:italic;">I</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><h3 id="reshape-long" tabindex="-1"><a class="header-anchor" href="#reshape-long" aria-hidden="true">#</a> Reshape long</h3><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">reshape</span><span style="color:#E0DEF4;"> long delay_</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">i</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">id</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">j</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">delay_type</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> s</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">ldat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">melt</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">measure</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;_delay&#39;</span><span style="color:#6E6A86;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Aside: you can also choose different names for your</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># new reshaped columns if you&#39;d like, e.g.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">melt</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">measure</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">patterns</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;_delay&#39;</span><span style="color:#6E6A86;">),</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">variable</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;d_type&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="reshape-wide" tabindex="-1"><a class="header-anchor" href="#reshape-wide" aria-hidden="true">#</a> Reshape wide</h3><p><em>Note: These examples use the reshaped-long data from above.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">reshape</span><span style="color:#E0DEF4;"> wide delay_</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">i</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">id</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">j</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">delay_type</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> s</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">wdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dcast</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">ldat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">...</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">variable</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Aside 1: If you only want to keep the id &amp; *_delay cols</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dcast</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">ldat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">id</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">variable</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Aside 2: It&#39;s also possible to perform complex and</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># powerful data aggregating tasks as part of the dcast</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># (i.e. reshape wide) call.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dcast</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">origin</span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;">.</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">fun</span><span style="color:#31748F;">=list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">min</span><span style="color:#E0DEF4;">,</span><span style="color:#E0DEF4;font-style:italic;">mean</span><span style="color:#E0DEF4;">,</span><span style="color:#E0DEF4;font-style:italic;">max</span><span style="color:#6E6A86;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">      </span><span style="color:#C4A7E7;font-style:italic;">value.var</span><span style="color:#31748F;">=</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;dep_delay&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">&#39;arr_delay&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div></div><h2 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> Merge</h2><h3 id="import-and-prep-secondary-dataset" tabindex="-1"><a class="header-anchor" href="#import-and-prep-secondary-dataset" aria-hidden="true">#</a> Import and prep secondary dataset</h3><p><em>Note: Our secondary dataset for demonstrating the merges in this section will be one on airport characteristics.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;">import delimited using </span><span style="color:#F6C177;">&quot;https://vincentarelbundock.github.io/Rdatasets/csv/nycflights13/airports.csv&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">clear</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Stata requires that merge ID variables have the same name  </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> across datasets. Let&#39;s do that before saving to disk.</span></span>
<span class="line"><span style="color:#31748F;">rename</span><span style="color:#E0DEF4;"> faa dest</span></span>
<span class="line"><span style="color:#31748F;">save</span><span style="color:#E0DEF4;"> dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Now bring our original dataset back into memory</span></span>
<span class="line"><span style="color:#E0DEF4;">import delimited using </span><span style="color:#F6C177;">&quot;https://raw.githubusercontent.com/Rdatatable/data.table/master/vignettes/flights14.csv&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">clear</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">dat2</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fread</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&quot;https://vincentarelbundock.github.io/Rdatasets/csv/nycflights13/airports.csv&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># R doesn&#39;t require that merge ID variables share the same</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># same name across datasets. But we&#39;ll add this anyway.</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">faa</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="inner-merge" tabindex="-1"><a class="header-anchor" href="#inner-merge" aria-hidden="true">#</a> Inner merge</h3><p><em>Only keep the matched rows across both datasets.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">merge</span><span style="color:#E0DEF4;"> m</span><span style="color:#6E6A86;">:</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> dest using dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">keep</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> nogen</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="full-merge" tabindex="-1"><a class="header-anchor" href="#full-merge" aria-hidden="true">#</a> Full merge</h3><p><em>Keep all rows of both datasets, regardless of whether matched.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">merge</span><span style="color:#E0DEF4;"> m</span><span style="color:#6E6A86;">:</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> dest using dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> nogen</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">all</span><span style="color:#31748F;">=</span><span style="color:#EBBCBA;">TRUE</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="left-merge" tabindex="-1"><a class="header-anchor" href="#left-merge" aria-hidden="true">#</a> Left merge</h3><p><em>Keep all rows from the &quot;main&quot; dataset.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">merge</span><span style="color:#E0DEF4;"> m</span><span style="color:#6E6A86;">:</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> dest using dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">keep</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> nogen</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">all.x</span><span style="color:#31748F;">=</span><span style="color:#EBBCBA;">TRUE</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="right-merge" tabindex="-1"><a class="header-anchor" href="#right-merge" aria-hidden="true">#</a> Right merge</h3><p><em>Keep all rows from the &quot;seconday&quot; dataset.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">merge</span><span style="color:#E0DEF4;"> m</span><span style="color:#6E6A86;">:</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> dest using dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">keep</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">2</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">3</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> nogen</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">all.y</span><span style="color:#31748F;">=</span><span style="color:#EBBCBA;">TRUE</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="anti-merge" tabindex="-1"><a class="header-anchor" href="#anti-merge" aria-hidden="true">#</a> Anti merge</h3><p><em>Keep non-matched rows only.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">merge</span><span style="color:#E0DEF4;"> m</span><span style="color:#6E6A86;">:</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> dest using dat2.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">keep</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> nogen</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#31748F;">!</span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">on</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="appending-data" tabindex="-1"><a class="header-anchor" href="#appending-data" aria-hidden="true">#</a> Appending data</h3><p><em>This example just appends the flights data to itself. But the same principle would carry over to appending multiple, different datasets.</em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">save</span><span style="color:#E0DEF4;"> data_to_append.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"><span style="color:#31748F;">append</span><span style="color:#E0DEF4;"> using data_to_append.dta</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">rbindlist</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"># Or rbind(dat, dat)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div></div><h3 id="advanced-data-table-merges-tips-and-tricks" tabindex="-1"><a class="header-anchor" href="#advanced-data-table-merges-tips-and-tricks" aria-hidden="true">#</a> Advanced data.table merges (tips and tricks)</h3><p><em>These next few examples are meant to highlight some specific data.table merge tricks. They don&#39;t really have good Stata equivalents (that we&#39;re aware of).</em></p><h5 id="merge-on-different-id-names" tabindex="-1"><a class="header-anchor" href="#merge-on-different-id-names" aria-hidden="true">#</a> Merge on different ID names</h5><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by.x</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;dest&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">by.y</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;faa&#39;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="set-keys-for-even-faster-merges-and-syntax-shortcuts" tabindex="-1"><a class="header-anchor" href="#set-keys-for-even-faster-merges-and-syntax-shortcuts" aria-hidden="true">#</a> Set keys for even faster merges and syntax shortcuts</h5><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">setkey</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">; </span><span style="color:#E0DEF4;font-style:italic;">setkey</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dest</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">mdat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">merge</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat2</span><span style="color:#E0DEF4;">) </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;">## note: don&#39;t need &#39;by&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="non-equi-joins" tabindex="-1"><a class="header-anchor" href="#non-equi-joins" aria-hidden="true">#</a> Non-equi joins</h5><p>Non-equi joins are a bit hard to understand if you&#39;ve never seen them before. But they are incredibly powerful and solve a suprisingly common problem: Merging datasets over a range (e.g. start to end dates), rather than exact matches. Here follows a simple example where we want to subset the first quarter flights for American Airlines and second quarter flights for United Airlines:</p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">dat3</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">data.table</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#E0DEF4;">     = </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;AA&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;UA&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                  </span><span style="color:#C4A7E7;font-style:italic;">start_month</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;">, </span><span style="color:#EBBCBA;">4</span><span style="color:#E0DEF4;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">                  </span><span style="color:#C4A7E7;font-style:italic;">end_month</span><span style="color:#E0DEF4;">   </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#EBBCBA;">3</span><span style="color:#E0DEF4;">, </span><span style="color:#EBBCBA;">6</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"><span style="color:#E0DEF4;">                  </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">dat3</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">on</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                 </span><span style="color:#C4A7E7;font-style:italic;">month</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&gt;=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">start_month</span><span style="color:#6E6A86;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                 </span><span style="color:#C4A7E7;font-style:italic;">month</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">&lt;=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">end_month</span><span style="color:#6E6A86;">)]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="rolling-joins" tabindex="-1"><a class="header-anchor" href="#rolling-joins" aria-hidden="true">#</a> Rolling joins</h5><p>Rolling join are similar and allow you to match a set of dates forwards or backwards. For example, our <code>dat</code> datset ends in October. So let&#39;s say we want to carry the last known entries for American and United Airlines forward to (random) future dates.</p><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">dat4</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">data.table</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#E0DEF4;">  = </span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;AA&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;UA&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">,</span></span>
<span class="line"><span style="color:#E0DEF4;">                  </span><span style="color:#C4A7E7;font-style:italic;">new_date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">as.IDate</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">c</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;2014-11-01&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;2014-11-15&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">))</span></span>
<span class="line"><span style="color:#E0DEF4;">                  </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">:=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">as.IDate</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">paste</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">year</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">month</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">day</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">sep</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;-&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;font-style:italic;">dat4</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">on</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">.</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">carrier</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">date</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">new_date</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">roll</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;nearest&#39;</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,99);function K(H,J){const n=p("ExternalLinkIcon");return t(),c(r,null,[y,s("p",null,[E,s("a",d,[F,l(n)]),D]),b,s("p",null,[u,m,f,s("a",A,[h,l(n)]),g,v,C,B,_,w,k,x,q,S,R]),I,s("p",null,[T,N,L,M,j,s("a",Y,[U,l(n)]),G,O,W]),X],64)}var V=o(i,[["render",K]]);export{V as default};
